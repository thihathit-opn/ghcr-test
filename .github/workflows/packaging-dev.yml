# This is a basic workflow to help you get started with Actions

name: Development container registry

# Controls when the workflow will run
on: [push,pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  on-push:
    # Check event
    if: github.event_name == 'push'
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
      IMAGE_NAME: branch

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Build an image
        run: |
         docker build -f Dockerfile.dev -t $IMAGE_NAME .
         echo "IMAGE_ID=ghcr.io/$GITHUB_REPOSITORY/$BRANCH_NAME" >> $GITHUB_ENV
        
      - name: Login into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push
        run: |
          docker tag $IMAGE_NAME $IMAGE_ID
          docker push $IMAGE_ID
          
  on-pull_request:
    # Check event
    if: github.event_name == 'pull_request'
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
      IMAGE_NAME: pr

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: jwalton/gh-find-current-pr@v1

      - name: Build an image
        run: |
         docker build -f Dockerfile.dev -t $IMAGE_NAME .
         echo "IMAGE_ID=ghcr.io/$GITHUB_REPOSITORY/$PR" >> $GITHUB_ENV
        
      - name: Login into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push
        run: |
          docker tag $IMAGE_NAME $IMAGE_ID
          docker push $IMAGE_ID
